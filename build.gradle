plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
	id 'com.github.johnrengelman.shadow' version '7.1.2'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	mavenCentral()
	maven { url = 'https://jitpack.io' }
	maven { url 'https://maven.fabricmc.net/' }
	maven { url 'https://maven.architectury.dev/' }
}

loom {
	runs {
		datagen {
			inherit server
			name "Data Generation"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
			vmArg "-Dfabric-api.datagen.modid=tutorial-mod"

			runDir "build/datagen"
		}

		datagenClient {
			inherit client
			name "Data Generation"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
			vmArg "-Dfabric-api.datagen.strict-validation"

			runDir "build/datagen"
		}
	}
}

sourceSets {
	main {
		resources {
			srcDirs += [
					'src/main/generated'
			]
		}
	}
}

configurations { shadow; implementation.extendsFrom shadow }


dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	shadow ('com.github.SNWCreations:Kookbc:0.27.2'){
		exclude module: "sponge-mixin"
		exclude module: "guava"
	}
	shadow 'cn.hutool:hutool-all:5.8.18'
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}
java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
	}
}

shadowJar {
	configurations = [project.configurations.shadow]
	relocate('snw.kookbc', 'net.flander923.snw.kookbc')
	relocate('com.google.gson','net.flander923.com.google.gson')
	relocate('org.yaml.snakeyaml', 'net.flander923.org.yaml.snakeyaml')
}

remapJar {
	dependsOn tasks.shadowJar
	inputFile.set(tasks.shadowJar.archiveFile)
}
